{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1qRuBgeVdwaKCQdJTSLdb2GnqwFUY3KQh","timestamp":1667416706412},{"file_id":"1MCUpTFJNaCC6w7cYRlCb5ofnjB7oOsIq","timestamp":1667416467757}]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"YmYKWrAWTDTl"},"source":["Documentación oficial de python \n","[https://docs.python.org/3/library/functions.html](https://docs.python.org/3/library/functions.html)\n","\n","## Funciones BUILT-IN (predefinidas)\n","O Built-in functions son las funciones que ya vienen incluidas en python. Quiere decir que no necesitamos programar , ni incluir módulos, librerías, ni programarlas nosotras mismas.\n"]},{"cell_type":"markdown","metadata":{"id":"HCO9fegiTsEI"},"source":["#MUTABILIDAD e INMUTABILIDAD\n","- Los objetos str son inmutables\n","Es posible asignar un nuevo valor a un objeto str, pero no es posible modificarlo"]},{"cell_type":"code","metadata":{"id":"h1Nnw62vT-Iw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667430227898,"user_tz":180,"elapsed":308,"user":{"displayName":"Matias Ignacio Escobar","userId":"14187268614140379090"}},"outputId":"2d269fff-15ba-4ed4-fced-4cdcf236860a"},"source":["a = \"Ejemplo\"\n","print(a)\n","print(id(a))\n","\n","a = \"Otra cosa\"\n","print(a)\n","print(id(a))\n","\n","print(a[5])\n","a = a.upper()\n","print(id(a))"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Ejemplo\n","139938105638512\n","Otra cosa\n","139938105637744\n","c\n","139938321911984\n"]}]},{"cell_type":"markdown","metadata":{"id":"T1qrECkKV2bN"},"source":["- Los objetos list son mutables"]},{"cell_type":"code","metadata":{"id":"rrQdW_1hV7H4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667430468866,"user_tz":180,"elapsed":293,"user":{"displayName":"Matias Ignacio Escobar","userId":"14187268614140379090"}},"outputId":"446ed3d0-412b-44b3-ed4e-7cd1439e3efa"},"source":["b = [2, 6]\n","print(id(b))\n","\n","b = [60, 8]\n","print(id(b))\n","\n","b[0] = 61\n","print(id(b))\n"],"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["139938105406560\n","139938105405600\n","139938105405600\n"]}]},{"cell_type":"markdown","metadata":{"id":"hASNyilbWSM9"},"source":["- Los objetos tipo tuple son inmutables"]},{"cell_type":"code","metadata":{"id":"ytNkOMa8WXyj","colab":{"base_uri":"https://localhost:8080/","height":235},"executionInfo":{"status":"error","timestamp":1667430846143,"user_tz":180,"elapsed":372,"user":{"displayName":"Matias Ignacio Escobar","userId":"14187268614140379090"}},"outputId":"11002fcc-52e0-4618-a12f-25b98d3dbf83"},"source":["c = (3,4)\n","print(id(c))\n","\n","c=(8,6)\n","print(id(c))\n","\n","c[0] = 14"],"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["139938239685168\n","139938239714080\n"]},{"output_type":"error","ename":"TypeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m<ipython-input-14-52e4673ca3d6>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mid\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mc\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      6\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 7\u001b[0;31m \u001b[0mc\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m14\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mTypeError\u001b[0m: 'tuple' object does not support item assignment"]}]},{"cell_type":"markdown","metadata":{"id":"00u0xqEHX0nq"},"source":["\n","\n","```\n","TIPO DE ESTRUCTURA   MUTABILIDAD\n","BOOL                  NO\n","INT                   NO\n","FLOAT                 NO\n","STR                   NO\n","LIST                  SI\n","TUPLE                 NO\n","DICT                  SI\n","```\n","\n"]},{"cell_type":"code","metadata":{"id":"SA72tZuPW4Mb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667431397362,"user_tz":180,"elapsed":287,"user":{"displayName":"Matias Ignacio Escobar","userId":"14187268614140379090"}},"outputId":"52c661a1-d616-40a6-f10c-38413aa6f916"},"source":["lista = [\"matias\", 158, True]\n","print(id(lista))\n","\n","otra_lista = lista\n","print(id(otra_lista))\n","\n","otra_lista[0] = \"Lucas\"\n","print(otra_lista)\n","print(lista)\n","\n","lista_nueva = lista.copy()\n","print(id(lista_nueva))\n","print(id(lista))\n","\n","tupla1 = (21,15)\n","tupla2 = tupla1\n","print(id(tupla1))\n","print(id(tupla2))\n","\n","tupla2 = (60,25)\n","print(tupla1)\n","\n","lista = list(tupla2)\n","print(lista)"],"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["139938104996480\n","139938104996480\n","['Lucas', 158, True]\n","['Lucas', 158, True]\n","139938105252592\n","139938104996480\n","139938106205280\n","139938106205280\n","(21, 15)\n","[60, 25]\n"]}]},{"cell_type":"markdown","source":["#CADENAS LITERALES\n","- f-strings, literal strings (cadenas literales)\n","Es una manera diferente de darle formato a cadenas de texto. \n","Para ello se agrega una f antes de las comillas del str.\n","Los nombres de las variables se indican entre {} y dentro de las comillas"],"metadata":{"id":"sC6tjgA0kDnP"}},{"cell_type":"code","source":["num1 = 16\n","\n","print('tu edad es:', num1)\n","\n","num2 = 25\n","suma = num1 + num2\n","\n","print('la suma de ', num1, \" mas \",num2 ,\" es igual a: \" , num1+num2 )\n","print(f'la suma de {num1} mas {num2} es igual a: {num1+num2}')\n","\n","print(f'el {num1} es mayor a {num2}? {num1>num2}')\n","\n"],"metadata":{"id":"kCwpQCnhkOFy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667431827644,"user_tz":180,"elapsed":289,"user":{"displayName":"Matias Ignacio Escobar","userId":"14187268614140379090"}},"outputId":"688601b8-c232-471f-8c7f-c10ea74d2638"},"execution_count":34,"outputs":[{"output_type":"stream","name":"stdout","text":["tu edad es: 16\n","la suma de  16  mas  25  es igual a:  41\n","la suma de 16 mas 25 es igual a: 41\n","el 16 es mayor a 25? False\n"]}]},{"cell_type":"code","source":["# condicionales en f-strings\n","# SINTAXIS: { <bloque True> if <condición> else <bloque False> }\n","gente = [['Ana', 33], ['Juan', 9], ['Sofía', 5], ['Jorge', 35]]\n","for persona in gente:  \n","  print(f'¿{persona[0]} es mayor de edad? {\"pepe\" if persona[1] >=18 else False}')"],"metadata":{"id":"MtUfqJW2wv4E","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667432255248,"user_tz":180,"elapsed":268,"user":{"displayName":"Matias Ignacio Escobar","userId":"14187268614140379090"}},"outputId":"44f1fecd-27ec-4063-ac58-a8acf09592da"},"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["¿Ana es mayor de edad? pepe\n","¿Juan es mayor de edad? False\n","¿Sofía es mayor de edad? False\n","¿Jorge es mayor de edad? pepe\n"]}]},{"cell_type":"code","source":["nombre = \"matias\"\n","apellido  = \"escobar\"\n","\n","print(f'Nombre: {nombre} \\n'\n","      f'Apellido: {apellido}'\n","      \n","      )"],"metadata":{"id":"zEC7hoHZxcgH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1667432140663,"user_tz":180,"elapsed":268,"user":{"displayName":"Matias Ignacio Escobar","userId":"14187268614140379090"}},"outputId":"322e8508-7738-4595-bd0e-363b5baf880f"},"execution_count":36,"outputs":[{"output_type":"stream","name":"stdout","text":["Nombre: matias \n","Apellido: escobar\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"8jJlEb2NzY-P"},"execution_count":null,"outputs":[]}]}